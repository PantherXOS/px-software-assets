image: node:lts-alpine

cache:
  paths:
    - node_modules/

stages:
  - upload
  - deploy

upload:
  stage: upload
  script:
    - apk add --update --no-cache pkgconfig autoconf automake libtool nasm build-base zlib-dev libjpeg-turbo-dev zlib
    - npm install
    - npm install -g gulp
    - npm install gulp
    - export AWS_ACCESS_KEY_ID="$(echo "$LOCAL_AWS_ACCESS_KEY_ID")"
    - export AWS_SECRET_ACCESS_KEY="$(echo "$LOCAL_AWS_SECRET_ACCESS_KEY")"
    - ls
    - pwd
    - gulp
  artifacts:
    when: on_success
    paths:
      - dist
    expire_in: 1h
  only:
    - master


deploy:
  stage: deploy
  script:
    - cd ../
    - apk add py-pip
    - pip install --user awscli
    - export PATH="$PATH:/root/.local/bin"
    - export AWS_ACCESS_KEY_ID="$(echo "$LOCAL_AWS_ACCESS_KEY_ID")"
    - export AWS_SECRET_ACCESS_KEY="$(echo "$LOCAL_AWS_SECRET_ACCESS_KEY")"
    - export AWS_DEFAULT_REGION=eu-central-1
    - export DB_ARCHIVE_FILENAME_TEMP="$(echo $CI_PROJECT_NAME)_latest.tgz"
    - tar -zcvf "$DB_ARCHIVE_FILENAME_TEMP" "$CI_PROJECT_NAME"/packages/ "$CI_PROJECT_NAME"/category.rec
    - export DB_HASH="$(sha256sum $DB_ARCHIVE_FILENAME_TEMP | cut -f1 -d " ")"
    - export DATE_STAMP="$(date +%d-%m-%Y_%H:%M:%S -u)"
    - export META_FILE_NAME="$(echo $CI_PROJECT_NAME)_latest_meta.yaml"
    - echo "hash:" $(echo $DB_HASH) > "$META_FILE_NAME"
    - echo "datestamp:" $(echo $DATE_STAMP) >> "$META_FILE_NAME"
    - cat "$META_FILE_NAME"
    - export PACKAGE_NAME="$(echo $CI_PROJECT_NAME)_meta_$(echo $CI_COMMIT_TAG).tgz"
    - ls -la
    # - rm $(echo $CI_PROJECT_NAME)_meta_*.tgz
    - rm *-*-*_*.tgz
    - tar -zcvf "$PACKAGE_NAME" "$META_FILE_NAME"
    - aws s3 cp "$PACKAGE_NAME" s3://assets.software.pantherx.org/
    - export DB_ARCHIVE_FILENAME="$(echo $DATE_STAMP)_$(echo $DB_HASH).tgz"
    - mv "$DB_ARCHIVE_FILENAME_TEMP" "$DB_ARCHIVE_FILENAME"
    - aws s3 cp "$DB_ARCHIVE_FILENAME" s3://assets.software.pantherx.org/
    - ls -la
  only:
    - tags
  tags: [source]

